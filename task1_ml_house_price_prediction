# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Generate some sample data
np.random.seed(42)
num_samples = 1000

# Features
rooms = np.random.randint(1, 6, num_samples)
area = np.random.randint(500, 2000, num_samples)
age = np.random.randint(1, 20, num_samples)

# Target variable
price = 50000 + 10000 * rooms + 30 * area - 100 * age + np.random.normal(0, 10000, num_samples)

# Create a DataFrame
data = pd.DataFrame({'Rooms': rooms, 'Area': area, 'Age': age, 'Price': price})

# Split the data into features (X) and target variable (y)
X = data[['Rooms', 'Area', 'Age']]
y = data['Price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Plot predictions against actual values
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual Prices vs Predicted Prices')
plt.show()
